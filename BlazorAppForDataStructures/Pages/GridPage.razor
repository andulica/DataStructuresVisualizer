@page "/grid-page"

<div id="linked-list">
    @foreach (var node in linkedList)
    {
        <div class="node">
            @node._data
        </div>
        @if (node.Next != null)
        {
            <div class="arrow">→</div>
        }
    }
    <div class="node null-node">null</div>
    <p>
    <Button class="btn btn-primary" @onclick ="buttonAddNodeEnd">Add Node End</Button>
        <Button class="btn btn-primary" @onclick="buttonRemoveNodeEnd">Remove Node End</Button>
        <Button class="btn btn-secondary" @onclick="buttonRemoveNodeEnd">Remove Node End</Button>

        <input @bind="inputData" type="text" placeholder="Enter node data" />
        <button class="btn btn-secondary" @onclick="buttonRemoveSpecificNode">Remove Specific Node</button>
    </p>
</div>
<div class="card-body">
    <h5 class="card-title">Card title</h5>
    <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
    <a href="#" class="btn btn-primary">Go somewhere</a>
</div>
<style>
    #linked-list {
        display: flex;
        align-items: center;
        gap: 10px; 
    }

    .node {
        padding: 10px;
        border: 2px solid black;
        border-radius: 5px; 
        text-align: center;
    }

    .null-node {
        background-color: lightgray;
    }

    .arrow {
        font-size: 20px;
    }
</style>

@code {
    private SinglyLinkedList<int> linkedList;
    private int  inputData;


    void buttonAddNodeEnd()
    {
        linkedList.Append(inputData);
    }
    void buttonRemoveNodeEnd()
    {
        linkedList.DeleteTail();
    }
    protected override void OnInitialized()
    {
        linkedList = new SinglyLinkedList<int>();

        linkedList.Append(1);
        linkedList.Append(2);
        linkedList.Append(3);
    }

    void addNodeAtIndex()
    {
        
    }

    void buttonRemoveSpecificNode()
    {
        linkedList.Delete(inputData);
    }


}
